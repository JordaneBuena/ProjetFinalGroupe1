{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../teacher.service\";\nimport * as i3 from \"../klass.service\";\nimport * as i4 from \"../subject.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction TeacherSubjectModifyComponent_ul_4_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Le nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeacherSubjectModifyComponent_ul_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Le pr\\u00E9nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeacherSubjectModifyComponent_ul_4_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"La date de naissance est requise\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeacherSubjectModifyComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, TeacherSubjectModifyComponent_ul_4_li_1_Template, 2, 0, \"li\", 3);\n    i0.ɵɵtemplate(2, TeacherSubjectModifyComponent_ul_4_li_2_Template, 2, 0, \"li\", 3);\n    i0.ɵɵtemplate(3, TeacherSubjectModifyComponent_ul_4_li_3_Template, 2, 0, \"li\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm3.controls[\"id\"].errors == null ? null : ctx_r0.myForm3.controls[\"id\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm4.controls[\"id\"].errors == null ? null : ctx_r0.myForm4.controls[\"id\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm5.controls[\"id\"].errors == null ? null : ctx_r0.myForm5.controls[\"id\"].errors[\"required\"]);\n  }\n}\nfunction TeacherSubjectModifyComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(s_r7.name);\n  }\n}\nfunction TeacherSubjectModifyComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(s_r8.name);\n  }\n}\nfunction TeacherSubjectModifyComponent_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(s_r9.name);\n  }\n}\nexport class TeacherSubjectModifyComponent {\n  constructor(fb, teachServ, klassServ, subjectServ, activatedRoute, router, datepipe) {\n    this.fb = fb;\n    this.teachServ = teachServ;\n    this.klassServ = klassServ;\n    this.subjectServ = subjectServ;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.datepipe = datepipe;\n    this.formSubmitted = false;\n    this.klasses = [];\n  }\n  submitForm() {\n    this.formSubmitted = true;\n    console.log(this.myForm);\n    if (this.myForm.valid) {\n      this.teachServ.add(this.myForm.value).subscribe(s => this.router.navigate(['../../'], {\n        relativeTo: this.activatedRoute\n      }));\n    }\n  }\n  ngOnInit() {\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    const id = this.activatedRoute.snapshot.paramMap.get(\"tId\") || \"\";\n    this.datepipe.transform(this.teacher?.dateOfBirth, 'dd/MM/yyyy');\n    if (id != '') {\n      this.teachServ.findOne(+id).subscribe(v => {\n        this.teacher = v;\n        this.myForm.get('id')?.setValue(this.teacher.id);\n        this.myForm.get('firstName')?.setValue(this.teacher.firstName);\n        this.myForm.get('lastName')?.setValue(this.teacher.lastName);\n        this.myForm.get('dateOfBirth')?.setValue(this.teacher.dateOfBirth);\n      });\n      //if (this.myForm.get('id')?.value === true){\n      // this.myForm.get('id')?.enable()\n      // }\n    }\n    //const id1 = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    //if (this.id1 != null) {\n    //this.subjectServ.getOne(this.id1).subscribe(t => {\n    //this.subject1 = t\n    //this.myForm3.get('name')?.setValue(this.subject1.name || \"\")\n    //this.myForm3.get('color')?.setValue(this.subject1.color || \"\")\n    // this.myForm3.get('school')?.setValue(this.subject1.school || \"\")\n    //})\n    //}\n    /*\n    const id2 = this.myForm4.get('id') || \"\";\n    if (id2 != '') {\n      this.subjectServ.getOne(+id2).subscribe(v => {\n        this.subject2 = v\n        this.myForm.get('name')?.setValue(this.subject2.name || \"\")\n        this.myForm.get('color')?.setValue(this.subject2.color || \"\")\n        this.myForm.get('school')?.setValue(this.subject2.school || \"\")\n      })\n    }\n           const id3 = this.myForm4.get('id') || \"\";\n      if (id3 != '') {\n        this.subjectServ.getOne(+id3).subscribe(v => {\n          this.subject3 = v\n          this.myForm.get('name')?.setValue(this.subject3.name || \"\")\n          this.myForm.get('color')?.setValue(this.subject3.color || \"\")\n          this.myForm.get('school')?.setValue(this.subject3.school || \"\")\n        })\n      }\n     \n    */\n    this.myForm = this.fb.group({\n      id: [{\n        value: this.teacher?.id || ''\n      }, Validators.required],\n      lastName: [{\n        value: this.teacher?.lastName || ''\n      }, Validators.required],\n      firstName: [{\n        value: this.teacher?.firstName || ''\n      }, Validators.required],\n      dateOfBirth: [this.teacher?.dateOfBirth.setUTCDate || '', Validators.required],\n      school: [{\n        id: this.schoolId\n      }],\n      subjects: this.fb.array([this.myForm3 = this.fb.group({\n        id: ['', Validators.required]\n        //name: [this.subject1?.name || ''],\n        //color: [this.subject1?.name || ''],\n        // school: [this.subject1?.school || '']\n      }), this.myForm4 = this.fb.group({\n        id: ['', Validators.required]\n        // name: [this.subject2?.name || ''],\n        // color: [this.subject2?.name || ''],\n        // school: [this.subject2?.school || '']\n      }), this.myForm5 = this.fb.group({\n        id: ['', Validators.required]\n        // name: [this.subject3?.name || ''],\n        // color: [this.subject3?.name || ''],\n        // school: [this.subject3?.school || '']\n      })])\n    });\n    //this.id1 = this.myForm3.get('id')?.value || null;\n    //console.log(this.id1)\n    this.teachServ.findAll().subscribe(v => this.teachers = v.filter(teacher => teacher.school.id === +this.schoolId));\n    this.subjectServ.getAll().subscribe(v => this.subjects = v.filter(subject => subject.school.id === +this.schoolId));\n    // this.teachServ.findAll().subscribe(v =>\n    // this.teachers2 = v.filter(teacher => teacher.id === this.teacher?.id).filter(teacher => teacher.school.id === +this.schoolId))\n    // v.filter(klass => klass.principalTeacher === null).filter(klass => klass.school.id === +this.schoolId))\n  }\n}\n\nTeacherSubjectModifyComponent.ɵfac = function TeacherSubjectModifyComponent_Factory(t) {\n  return new (t || TeacherSubjectModifyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TeacherService), i0.ɵɵdirectiveInject(i3.KlassService), i0.ɵɵdirectiveInject(i4.SubjectService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.DatePipe));\n};\nTeacherSubjectModifyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TeacherSubjectModifyComponent,\n  selectors: [[\"app-teacher-subject-modify\"]],\n  decls: 33,\n  vars: 11,\n  consts: [[1, \"card\", \"w-50\"], [1, \"card-header\"], [1, \"text-danger\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\"], [1, \"form-text\"], [\"for\", \"subject1\"], [\"id\", \"subject1\", \"formControlName\", \"id\"], [\"class\", \"lastName\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"subject2\"], [\"id\", \"subject2\", \"formControlName\", \"id\"], [\"for\", \"subject3\"], [\"id\", \"subject3\", \"formControlName\", \"id\"], [1, \"card-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-info\"], [\"type\", \"button\", \"routerLink\", \"../../\", 1, \"btn\", \"btn-outline-info\"], [1, \"lastName\", 3, \"value\"]],\n  template: function TeacherSubjectModifyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Ajouter un nouveau Professeur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TeacherSubjectModifyComponent_ul_4_Template, 4, 3, \"ul\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TeacherSubjectModifyComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TeacherSubjectModifyComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Mati\\u00E8re enseign\\u00E9e\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵtemplate(13, TeacherSubjectModifyComponent_option_13_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TeacherSubjectModifyComponent_Template_form_ngSubmit_14_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Mati\\u00E8re enseign\\u00E9e\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 11);\n      i0.ɵɵtext(19);\n      i0.ɵɵtemplate(20, TeacherSubjectModifyComponent_option_20_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TeacherSubjectModifyComponent_Template_form_ngSubmit_21_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\", 12);\n      i0.ɵɵtext(24, \"Mati\\u00E8re enseign\\u00E9e\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\", 13);\n      i0.ɵɵtext(26);\n      i0.ɵɵtemplate(27, TeacherSubjectModifyComponent_option_27_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(28, \"div\", 14)(29, \"button\", 15);\n      i0.ɵɵtext(30, \"Ajouter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 16);\n      i0.ɵɵtext(32, \"Retour\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.formSubmitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm3);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.schoolId, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm4);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.schoolId, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm5);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.schoolId, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjects);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i5.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","TeacherSubjectModifyComponent","constructor","fb","teachServ","klassServ","subjectServ","activatedRoute","router","datepipe","submitForm","formSubmitted","console","log","myForm","valid","add","value","subscribe","s","navigate","relativeTo","ngOnInit","schoolId","snapshot","paramMap","get","id","transform","teacher","dateOfBirth","findOne","v","setValue","firstName","lastName","group","required","setUTCDate","school","subjects","array","myForm3","myForm4","myForm5","findAll","teachers","filter","getAll","subject","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/teacher-subject-modify/teacher-subject-modify.component.ts","/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/teacher-subject-modify/teacher-subject-modify.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Teacher} from \"../../model/teacher.model\";\nimport {Klass} from \"../../model/klass.model\";\nimport {Subject} from \"../../model/subject.model\";\nimport {TeacherService} from \"../teacher.service\";\nimport {KlassService} from \"../klass.service\";\nimport {SubjectService} from \"../subject.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DatePipe} from \"@angular/common\";\n\n@Component({\n  selector: 'app-teacher-subject-modify',\n  templateUrl: './teacher-subject-modify.component.html',\n  styleUrls: ['./teacher-subject-modify.component.css']\n})\nexport class TeacherSubjectModifyComponent {\n\n  myForm!: FormGroup;\n  myForm2!: FormGroup;\n  myForm3!: FormGroup;\n  myForm4!: FormGroup;\n  myForm5!: FormGroup;\n  formC!: FormControl;\n\n  teacher: Teacher | undefined\n  subject1: Subject | undefined\n  subject2: Subject | undefined\n  subject3: Subject | undefined\n  formSubmitted: boolean = false\n\n  schoolId!: string\n  klasses: Klass[] = []\n  subjects!: Subject[]\n  teachers!: Teacher[]\n  id1!:number\n\n\n  subjects1!: Subject[]\n\n  dateOfBirth!: Date\n\n\n\n  constructor(private fb: FormBuilder,\n              private teachServ: TeacherService,\n              private klassServ: KlassService,\n              private subjectServ: SubjectService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private datepipe: DatePipe) {\n  };\n\n  submitForm() {\n    this.formSubmitted = true\n\n    console.log(this.myForm)\n    if (this.myForm.valid) {\n      this.teachServ.add(this.myForm.value)\n        .subscribe(s =>\n          this.router.navigate(['../../'], {relativeTo: this.activatedRoute}))\n    }\n  };\n\n\n  ngOnInit(): void {\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    const id = this.activatedRoute.snapshot.paramMap.get(\"tId\") || \"\";\n    this.datepipe.transform(this.teacher?.dateOfBirth, 'dd/MM/yyyy');\n    if (id != '') {\n      this.teachServ.findOne(+id).subscribe(v => {\n        this.teacher = v\n        this.myForm.get('id')?.setValue(this.teacher.id)\n        this.myForm.get('firstName')?.setValue(this.teacher.firstName)\n        this.myForm.get('lastName')?.setValue(this.teacher.lastName)\n        this.myForm.get('dateOfBirth')?.setValue(this.teacher.dateOfBirth)\n      })\n\n      //if (this.myForm.get('id')?.value === true){\n       // this.myForm.get('id')?.enable()\n        // }\n    }\n    //const id1 = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n\n    //if (this.id1 != null) {\n      //this.subjectServ.getOne(this.id1).subscribe(t => {\n        //this.subject1 = t\n        //this.myForm3.get('name')?.setValue(this.subject1.name || \"\")\n        //this.myForm3.get('color')?.setValue(this.subject1.color || \"\")\n       // this.myForm3.get('school')?.setValue(this.subject1.school || \"\")\n      //})\n    //}\n    /*\n    const id2 = this.myForm4.get('id') || \"\";\n    if (id2 != '') {\n      this.subjectServ.getOne(+id2).subscribe(v => {\n        this.subject2 = v\n        this.myForm.get('name')?.setValue(this.subject2.name || \"\")\n        this.myForm.get('color')?.setValue(this.subject2.color || \"\")\n        this.myForm.get('school')?.setValue(this.subject2.school || \"\")\n      })\n    }\n\n      const id3 = this.myForm4.get('id') || \"\";\n      if (id3 != '') {\n        this.subjectServ.getOne(+id3).subscribe(v => {\n          this.subject3 = v\n          this.myForm.get('name')?.setValue(this.subject3.name || \"\")\n          this.myForm.get('color')?.setValue(this.subject3.color || \"\")\n          this.myForm.get('school')?.setValue(this.subject3.school || \"\")\n        })\n      }\n\n\n*/\n\n\n      this.myForm = this.fb.group({\n        id: [{value: this.teacher?.id || ''}, Validators.required],\n        lastName: [{value: this.teacher?.lastName || ''}, Validators.required],\n        firstName: [{value: this.teacher?.firstName || ''}, Validators.required],\n        dateOfBirth: [this.teacher?.dateOfBirth.setUTCDate || '', Validators.required],\n        school: [{id: this.schoolId}],\n        subjects: this.fb.array([\n          this.myForm3 = this.fb.group({\n            id: ['', Validators.required],\n              //name: [this.subject1?.name || ''],\n              //color: [this.subject1?.name || ''],\n           // school: [this.subject1?.school || '']\n          }),\n          this.myForm4 = this.fb.group({\n            id: ['', Validators.required],\n           // name: [this.subject2?.name || ''],\n           // color: [this.subject2?.name || ''],\n           // school: [this.subject2?.school || '']\n          }),\n          this.myForm5 = this.fb.group({\n            id: ['', Validators.required],\n           // name: [this.subject3?.name || ''],\n           // color: [this.subject3?.name || ''],\n           // school: [this.subject3?.school || '']\n          })\n        ])\n      })\n    //this.id1 = this.myForm3.get('id')?.value || null;\n    //console.log(this.id1)\n\n\n      this.teachServ.findAll().subscribe(v =>\n        this.teachers = v.filter(teacher => teacher.school.id === +this.schoolId))\n      this.subjectServ.getAll().subscribe(v =>\n        this.subjects = v.filter(subject => subject.school.id === +this.schoolId))\n\n      // this.teachServ.findAll().subscribe(v =>\n      // this.teachers2 = v.filter(teacher => teacher.id === this.teacher?.id).filter(teacher => teacher.school.id === +this.schoolId))\n      // v.filter(klass => klass.principalTeacher === null).filter(klass => klass.school.id === +this.schoolId))\n\n    }\n  }\n\n","<div class=\"card w-50\">\n\n  <h1 class=\"card-header\">Ajouter un nouveau Professeur</h1>\n  <div class=\"text-danger\">\n    <ul *ngIf=\"formSubmitted\">\n      <li *ngIf=\"myForm3.controls['id'].errors?.['required']\">Le nom est requis</li>\n      <li *ngIf=\"myForm4.controls['id'].errors?.['required']\">Le prénom est requis</li>\n      <li *ngIf=\"myForm5.controls['id'].errors?.['required']\">La date de naissance est requise</li>\n    </ul>\n  </div>\n  <form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\">\n    <div class=\"card-body\">\n     <!-- <div class=\"form-text\">\n        <label for=\"id\">Id</label>\n        <input type=\"text\" id=\"id\" formControlName=\"id\" >\n      </div>\n      <div class=\"form-text\">\n        <label for=\"lastName\">Nom de famille</label>\n        <input type=\"text\" id=\"lastName\" formControlName=\"lastName\">\n      </div>\n      <div class=\"form-text\">\n        <label for=\"firstName\">Prenom</label>\n        <input type=\"text\" id=\"firstName\" formControlName=\"firstName\">\n      </div>\n      <div>\n        <label for=\"dateOfBirth\">Date de naissance</label>\n        <input type=\"date\" id=\"dateOfBirth\" formControlName=\"dateOfBirth\">\n      </div>-->\n\n      <form [formGroup]=\"myForm3\" (ngSubmit)=\"submitForm()\">\n      <div class=\"form-text\"  >\n        <label for=\"subject1\" >Matière enseignée</label>\n        <select id=\"subject1\" formControlName=\"id\">\n          {{schoolId}}\n          <option class=\"lastName\" *ngFor=\"let s of subjects\" [value]=\"s.id\">{{s.name}}</option>\n        </select>\n      </div><!--\n        <div class=\"form-text\">\n          <label for=\"name1\">Nom</label>\n          <input type=\"text\" id=\"name1\" formControlName=\"name\">\n        </div>\n        <div class=\"form-text\">\n          <label for=\"color1\">Nom</label>\n          <input type=\"text\" id=\"color1\" formControlName=\"color\">\n        </div>\n        <div class=\"form-text\">\n          <label for=\"school1\">Nom</label>\n          <input type=\"text\" id=\"school1\" formControlName=\"school\">\n        </div>-->\n      </form>\n      <form [formGroup]=\"myForm4\" (ngSubmit)=\"submitForm()\">\n        <div class=\"form-text\"  >\n          <label for=\"subject2\" >Matière enseignée</label>\n          <select id=\"subject2\" formControlName=\"id\">\n            {{schoolId}}\n            <option class=\"lastName\" *ngFor=\"let s of subjects\" [value]=\"s.id\">{{s.name}}</option>\n          </select>\n        </div>\n        <!--\n        <div class=\"form-text\">\n          <label for=\"name2\">Nom</label>\n          <input type=\"text\" id=\"name2\" formControlName=\"name\">\n        </div>\n        <div class=\"form-text\">\n          <label for=\"color2\">Nom</label>\n          <input type=\"text\" id=\"color2\" formControlName=\"color\">\n        </div>\n        <div class=\"form-text\">\n          <label for=\"school2\">Nom</label>\n          <input type=\"text\" id=\"school2\" formControlName=\"school\">\n        </div>-->\n      </form>\n      <form [formGroup]=\"myForm5\" (ngSubmit)=\"submitForm()\">\n        <div class=\"form-text\"  >\n          <label for=\"subject3\" >Matière enseignée</label>\n          <select id=\"subject3\" formControlName=\"id\">\n            {{schoolId}}\n            <option class=\"lastName\" *ngFor=\"let s of subjects\" [value]=\"s.id\">{{s.name}}</option>\n          </select>\n        </div>\n        <!--<div class=\"form-text\">\n          <label for=\"name3\">Nom</label>\n          <input type=\"text\" id=\"name3\" formControlName=\"name\">\n        </div>\n        <div class=\"form-text\">\n          <label for=\"color3\">Nom</label>\n          <input type=\"text\" id=\"color3\" formControlName=\"color\">\n        </div>\n        <div class=\"form-text\">\n          <label for=\"school3\">Nom</label>\n          <input type=\"text\" id=\"school3\" formControlName=\"school\">\n        </div> -->\n      </form>\n\n\n    </div>\n    <div class=\"card-footer\">\n      <button class=\"btn btn-outline-info\" type=\"submit\">Ajouter</button>\n      <button type=\"button\" class=\"btn btn-outline-info\" routerLink=\"../../\">Retour</button>\n    </div>\n  </form>\n\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}