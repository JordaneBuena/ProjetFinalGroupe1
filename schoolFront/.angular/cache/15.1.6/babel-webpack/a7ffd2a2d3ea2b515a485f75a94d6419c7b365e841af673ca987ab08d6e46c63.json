{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../klass.service\";\nimport * as i3 from \"../teacher.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction KlassAddComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵelement(1, \"li\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class KlassAddComponent {\n  constructor(fb, klassServ, teacherServ, activatedRoute, router) {\n    this.fb = fb;\n    this.klassServ = klassServ;\n    this.teacherServ = teacherServ;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.formSubmitted = false;\n    this.teachers = [];\n  }\n  submitForm() {\n    this.formSubmitted = true;\n    if (this.myForm.valid) {\n      this.klassServ.add(this.myForm.value).subscribe(s => this.router.navigate(['../'], {\n        relativeTo: this.activatedRoute\n      }));\n    }\n  }\n  ngOnInit() {\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n      //   principalTeacher: this.fb.group({\n      //     id: ['']\n      //   }),\n      school: {\n        id: this.schoolId\n      }\n    });\n    // this.myFormt = this.fb.group({\n    //   //name: ['', Validators.required]\n    //   principalTeacher: this.fb.group({\n    //     id: [''],\n    //     principaleKlass:{\n    //      id: [''],\n    //     }\n    //   })\n    // school: {id: this.schoolId}\n    //})\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    this.teacherServ.findAll().subscribe(v => this.teachers = v.filter(teacher => teacher.principaleKlass === null).filter(teacher => teacher.school.id === +this.schoolId));\n  }\n}\nKlassAddComponent.ɵfac = function KlassAddComponent_Factory(t) {\n  return new (t || KlassAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.KlassService), i0.ɵɵdirectiveInject(i3.TeacherService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n};\nKlassAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: KlassAddComponent,\n  selectors: [[\"app-klass-add\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"card\", \"w-50\"], [1, \"card-header\"], [1, \"text-danger\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\"], [1, \"form-text\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [1, \"card-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-info\"]],\n  template: function KlassAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Param\\u00E9trage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, KlassAddComponent_ul_4_Template, 2, 0, \"ul\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function KlassAddComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Nom de la classe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"button\", 10);\n      i0.ɵɵtext(13, \"Ajouter\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"pre\");\n      i0.ɵɵtext(15, \"      \");\n      i0.ɵɵelementStart(16, \"p\");\n      i0.ɵɵtext(17);\n      i0.ɵɵpipe(18, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n  \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.formSubmitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate1(\"myForm Klass\", i0.ɵɵpipeBind1(18, 3, ctx.myForm.value), \" \");\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAgCA,UAAU,QAAO,gBAAgB;;;;;;;;;ICG7DC,0BAA2B;IACzBA,qBAAS;IACXA,iBAAK;;;ADOT,OAAM,MAAOC,iBAAiB;EAgB5BC,YAAoBC,EAAe,EACfC,SAAuB,EACvBC,WAA2B,EAC3BC,cAA8B,EAC9BC,MAAc;IAJd,OAAE,GAAFJ,EAAE;IACF,cAAS,GAATC,SAAS;IACT,gBAAW,GAAXC,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IAd1B,kBAAa,GAAY,KAAK;IAI9B,aAAQ,GAAc,EAAE;EAWxB;EAEAC,UAAU;IACR,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE;MACrB,IAAI,CAACP,SAAS,CAACQ,GAAG,CAAC,IAAI,CAACF,MAAM,CAACG,KAAK,CAAC,CAClCC,SAAS,CAACC,CAAC,IACV,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;QAACC,UAAU,EAAE,IAAI,CAACX;MAAc,CAAC,CAAC,CAAC;;EAGzE;EAEAY,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACb,cAAc,CAACc,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;IAEtE,IAAI,CAACZ,MAAM,GAAG,IAAI,CAACP,EAAE,CAACoB,KAAK,CAAC;MAC1BC,IAAI,EAAE,CAAC,EAAE,EAAEzB,UAAU,CAAC0B,QAAQ,CAAC;MACjC;MACA;MACA;MACEC,MAAM,EAAE;QAACC,EAAE,EAAE,IAAI,CAACR;MAAQ;KAC1B,CAAC;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACE;IACF;IAEA,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACb,cAAc,CAACc,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;IACtE,IAAI,CAACjB,WAAW,CAACuB,OAAO,EAAE,CAACd,SAAS,CAACe,CAAC,IAAI,IAAI,CAACC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,eAAe,KAAK,IAAI,CAAC,CAACF,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACN,MAAM,CAACC,EAAE,KAAK,CAAC,IAAI,CAACR,QAAQ,CAAC,CAAC;EAExK;;AAzDSlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb9BtC,8BAAuB;MAEGA,gCAAW;MAAAA,iBAAK;MACxCA,8BAAyB;MACvBA,gEAEK;MACPA,iBAAM;MACNA,+BAAqD;MAA1BA;QAAA,OAAYuC,gBAAY;MAAA,EAAC;MAClDvC,8BAAuB;MAEDA,gCAAgB;MAAAA,iBAAQ;MAC1CA,4BAAoD;MACtDA,iBAAM;MAIRA,+BAAyB;MAC4BA,wBAAO;MAAAA,iBAAS;MAErEA,4BAAK;MACHA;MAAAA,0BAAG;MAAAA,aAAoC;;MAAAA,iBAAI;MAC/CA;MAAAA,iBAAM;;;MAlBCA,eAAoB;MAApBA,yCAAoB;MAIrBA,eAAoB;MAApBA,sCAAoB;MAanBA,gBAAoC;MAApCA,mFAAoC","names":["Validators","i0","KlassAddComponent","constructor","fb","klassServ","teacherServ","activatedRoute","router","submitForm","formSubmitted","myForm","valid","add","value","subscribe","s","navigate","relativeTo","ngOnInit","schoolId","snapshot","paramMap","get","group","name","required","school","id","findAll","v","teachers","filter","teacher","principaleKlass","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/klass-add/klass-add.component.ts","/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/klass-add/klass-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Teacher} from \"../../model/teacher.model\";\nimport {TeacherService} from \"../teacher.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Klass} from \"../../model/klass.model\";\nimport {KlassService} from \"../klass.service\";\n\n@Component({\n  selector: 'app-klass-add',\n  templateUrl: './klass-add.component.html',\n  styleUrls: ['./klass-add.component.css']\n})\nexport class KlassAddComponent {\n\n  myForm!: FormGroup;\n  myFormt!: FormGroup;\n\n  klass: Klass | undefined\n  formSubmitted: boolean = false\n\n  schoolId!: string\n\n  teachers: Teacher[] = []\n\n  klass1!: Klass\n\n\n\n  constructor(private fb: FormBuilder,\n              private klassServ: KlassService,\n              private teacherServ: TeacherService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router) {\n  };\n\n  submitForm() {\n    this.formSubmitted = true\n    if (this.myForm.valid) {\n      this.klassServ.add(this.myForm.value)\n        .subscribe(s =>\n          this.router.navigate(['../'], {relativeTo: this.activatedRoute}))\n    }\n\n  };\n\n  ngOnInit(): void {\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n    //   principalTeacher: this.fb.group({\n    //     id: ['']\n    //   }),\n      school: {id: this.schoolId}\n     })\n    // this.myFormt = this.fb.group({\n    //   //name: ['', Validators.required]\n    //   principalTeacher: this.fb.group({\n    //     id: [''],\n    //     principaleKlass:{\n    //      id: [''],\n    //     }\n    //   })\n      // school: {id: this.schoolId}\n    //})\n\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    this.teacherServ.findAll().subscribe(v => this.teachers = v.filter(teacher => teacher.principaleKlass === null).filter(teacher => teacher.school.id === +this.schoolId))\n\n    }\n\n\n\n\n\n}\n","<div class=\"card w-50\">\n\n  <h1 class=\"card-header\">Paramétrage</h1>\n  <div class=\"text-danger\">\n    <ul *ngIf=\"!formSubmitted\">\n      <li></li>\n    </ul>\n  </div>\n  <form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\">\n    <div class=\"card-body\">\n      <div class=\"form-text\">\n        <label for=\"name\">Nom de la classe</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\">\n      </div>\n\n\n    </div>\n    <div class=\"card-footer\">\n      <button class=\"btn btn-outline-info\" type=\"submit\">Ajouter</button>\n    </div>\n    <pre>\n      <p>myForm Klass{{myForm.value | json}} </p>\n  </pre>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}