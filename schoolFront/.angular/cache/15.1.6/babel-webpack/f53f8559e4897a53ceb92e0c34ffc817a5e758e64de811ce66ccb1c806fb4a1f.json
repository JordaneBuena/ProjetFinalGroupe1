{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../teacher.service\";\nimport * as i3 from \"../klass.service\";\nimport * as i4 from \"../subject.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction TeacherAddComponent_ul_4_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Le nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeacherAddComponent_ul_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Le pr\\u00E9nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeacherAddComponent_ul_4_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"La date de naissance est requise\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeacherAddComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, TeacherAddComponent_ul_4_li_1_Template, 2, 0, \"li\", 3);\n    i0.ɵɵtemplate(2, TeacherAddComponent_ul_4_li_2_Template, 2, 0, \"li\", 3);\n    i0.ɵɵtemplate(3, TeacherAddComponent_ul_4_li_3_Template, 2, 0, \"li\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm.controls[\"lastName\"].errors == null ? null : ctx_r0.myForm.controls[\"lastName\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm.controls[\"firstName\"].errors == null ? null : ctx_r0.myForm.controls[\"firstName\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm.controls[\"dateOfBirth\"].errors == null ? null : ctx_r0.myForm.controls[\"dateOfBirth\"].errors[\"required\"]);\n  }\n}\nexport class TeacherAddComponent {\n  constructor(fb, teachServ, klassServ, subjectServ, activatedRoute, router) {\n    this.fb = fb;\n    this.teachServ = teachServ;\n    this.klassServ = klassServ;\n    this.subjectServ = subjectServ;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.formSubmitted = false;\n    this.klasses = [];\n    this.lastName = 'blabla';\n    this.firstName = '';\n  }\n  submitForm() {\n    this.formSubmitted = true;\n    console.log(this.myForm);\n    if (this.myForm.valid) {\n      // this.subjects=[this.myForm.get(\"subject\")?.value , this.myForm.get(\"subject2\")?.value ,this.myForm.get(\"subject3\")?.value ]\n      // this.lastName = this.myForm.get(\"lastName\")?.value\n      // this.myForm2.lastName= <string>this.lastName\n      // this.firstName = this.myForm.get(\"firstName\")?.value\n      // this.myForm2.firstName= <string>this.firstName\n      // this.dateOfBirth = this.myForm.get(\"dateOfBirth\")?.value\n      // this.myForm2.dateOfBirth= this.dateOfBirth\n      //this.myForm2.subjects= this.subjects\n      this.teachServ.add(this.myForm.value).subscribe(s => this.router.navigate(['../'], {\n        relativeTo: this.activatedRoute\n      }));\n    }\n  }\n  ngOnInit() {\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    this.myForm = this.fb.group({\n      lastName: [this.teacher?.lastName || '', Validators.required],\n      firstName: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      school: [{\n        id: this.schoolId\n      }]\n    });\n    this.myForm = this.fb.group({\n      lastName: [this.teacher?.lastName || '', Validators.required],\n      firstName: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      //principaleKlass: this.fb.group({\n      //   //  id: ['']\n      //   //}),\n      school: [{\n        id: this.schoolId\n      }]\n      // subjects: this.fb.array([\n      //   this.myForm2= this.fb.group({\n      //     id:['']\n      //   }),\n      //   this.myForm3= this.fb.group({\n      //     id:['']\n      //   }),\n      //   this.myForm4= this.fb.group({\n      //     id:['']\n      //   })\n      // ])\n    });\n    //this.subjects2 = this.myForm.get('subjects') as FormArray;\n    // this.subjects2.push(new FormControl());\n    //this.klassServ.findAll().subscribe(v =>\n    //this.klasses = v.filter(klass => klass.principalTeacher === null).filter(klass => klass.school.id === +this.schoolId))\n    this.teachServ.findAll().subscribe(v => this.teachers = v.filter(teacher => teacher.school.id === +this.schoolId));\n    //if(v.length >0)\n    //  this.myForm.get('klass')?.get('id')?.setValue(v[0].id)\n    // = v.filter(klass => klass.principalTeacher === null).filter(klass => klass.school.id === +this.schoolId))\n  }\n}\n\nTeacherAddComponent.ɵfac = function TeacherAddComponent_Factory(t) {\n  return new (t || TeacherAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TeacherService), i0.ɵɵdirectiveInject(i3.KlassService), i0.ɵɵdirectiveInject(i4.SubjectService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router));\n};\nTeacherAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TeacherAddComponent,\n  selectors: [[\"app-teacher-add\"]],\n  decls: 26,\n  vars: 5,\n  consts: [[1, \"card\", \"w-50\"], [1, \"card-header\"], [1, \"text-danger\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\"], [1, \"form-text\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\"], [\"for\", \"dateOfBirth\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"formControlName\", \"dateOfBirth\"], [1, \"card-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-info\"], [\"type\", \"button\", \"routerLink\", \"../\", 1, \"btn\", \"btn-outline-info\"]],\n  template: function TeacherAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Ajouter un nouveau Professeur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TeacherAddComponent_ul_4_Template, 4, 3, \"ul\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TeacherAddComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Nom de famille\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Prenom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Date de naissance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 13)(20, \"button\", 14);\n      i0.ɵɵtext(21, \"Ajouter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 15);\n      i0.ɵɵtext(23, \"Retour\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtext(24);\n      i0.ɵɵpipe(25, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.formSubmitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(19);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 3, ctx.myForm.value), \" \");\n    }\n  },\n  dependencies: [i6.NgIf, i5.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","TeacherAddComponent","constructor","fb","teachServ","klassServ","subjectServ","activatedRoute","router","submitForm","formSubmitted","console","log","myForm","valid","add","value","subscribe","s","navigate","relativeTo","ngOnInit","schoolId","snapshot","paramMap","get","group","lastName","teacher","required","firstName","dateOfBirth","school","id","findAll","v","teachers","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/teacher-add/teacher-add.component.ts","/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/teacher-add/teacher-add.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Teacher} from \"../../model/teacher.model\";\nimport {TeacherService} from \"../teacher.service\";\nimport {KlassService} from \"../klass.service\";\nimport {Klass} from \"../../model/klass.model\";\nimport {Subject} from \"../../model/subject.model\";\nimport {SubjectService} from \"../subject.service\";\n\n\n@Component({\n  selector: 'app-teacher-add',\n  templateUrl: './teacher-add.component.html',\n  styleUrls: ['./teacher-add.component.css']\n})\nexport class TeacherAddComponent implements OnInit {\n\n\n  myForm!: FormGroup;\n  myForm2!: FormGroup;\n  myForm3!: FormGroup;\n  myForm4!: FormGroup;\n  myForm5!: FormGroup;\n\n  teacher: Teacher | undefined\n  formSubmitted: boolean = false\n\n  schoolId!: string\n  klasses: Klass[] = []\n  subjects!: Subject[]\n  teachers!: Teacher[]\n\n  subjects1!: Subject[]\n\n  lastName: string='blabla'\n  firstName:string=''\n  dateOfBirth!: Date\n\n\n\n  constructor(private fb: FormBuilder,\n              private teachServ: TeacherService,\n              private klassServ: KlassService,\n              private subjectServ:SubjectService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router) {\n  };\n\n  submitForm() {\n    this.formSubmitted = true\n\n    console.log(this.myForm)\n    if (this.myForm.valid) {\n      // this.subjects=[this.myForm.get(\"subject\")?.value , this.myForm.get(\"subject2\")?.value ,this.myForm.get(\"subject3\")?.value ]\n      // this.lastName = this.myForm.get(\"lastName\")?.value\n      // this.myForm2.lastName= <string>this.lastName\n      // this.firstName = this.myForm.get(\"firstName\")?.value\n      // this.myForm2.firstName= <string>this.firstName\n      // this.dateOfBirth = this.myForm.get(\"dateOfBirth\")?.value\n      // this.myForm2.dateOfBirth= this.dateOfBirth\n\n\n      //this.myForm2.subjects= this.subjects\n      this.teachServ.add(this.myForm.value)\n        .subscribe(s =>\n          this.router.navigate(['../'], {relativeTo: this.activatedRoute}))\n    }\n  };\n\n\n  ngOnInit(): void {\n    this.schoolId = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    this.myForm = this.fb.group({\n      lastName: [this.teacher?.lastName || '', Validators.required],\n      firstName: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      school: [{id: this.schoolId}],\n\n    })\n     this.myForm = this.fb.group({\n       lastName: [this.teacher?.lastName || '', Validators.required],\n       firstName: ['', Validators.required],\n       dateOfBirth: ['', Validators.required],//dateOfBirth: [new Date(), Validators.required],<- validation date ne marche pas sinon\n       //principaleKlass: this.fb.group({\n    //   //  id: ['']\n    //   //}),\n       school: [{id: this.schoolId}],\n       // subjects: this.fb.array([\n       //   this.myForm2= this.fb.group({\n       //     id:['']\n       //   }),\n       //   this.myForm3= this.fb.group({\n       //     id:['']\n       //   }),\n       //   this.myForm4= this.fb.group({\n       //     id:['']\n       //   })\n       // ])\n     })\n\n\n     //this.subjects2 = this.myForm.get('subjects') as FormArray;\n    // this.subjects2.push(new FormControl());\n\n\n\n\n\n\n\n\n    //this.klassServ.findAll().subscribe(v =>\n      //this.klasses = v.filter(klass => klass.principalTeacher === null).filter(klass => klass.school.id === +this.schoolId))\n\n\n\n    this.teachServ.findAll().subscribe(v =>\n      this.teachers = v.filter(teacher => teacher.school.id === +this.schoolId))\n\n    //if(v.length >0)\n    //  this.myForm.get('klass')?.get('id')?.setValue(v[0].id)\n    // = v.filter(klass => klass.principalTeacher === null).filter(klass => klass.school.id === +this.schoolId))\n\n  }\n\n}\n","<div class=\"card w-50\">\n\n  <h1 class=\"card-header\">Ajouter un nouveau Professeur</h1>\n  <div class=\"text-danger\">\n    <ul *ngIf=\"formSubmitted\">\n      <li *ngIf=\"myForm.controls['lastName'].errors?.['required']\">Le nom est requis</li>\n      <li *ngIf=\"myForm.controls['firstName'].errors?.['required']\">Le prénom est requis</li>\n      <li *ngIf=\"myForm.controls['dateOfBirth'].errors?.['required']\">La date de naissance est requise</li>\n\n    </ul>\n  </div>\n  <form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\">\n    <div class=\"card-body\">\n      <div class=\"form-text\">\n        <label for=\"lastName\">Nom de famille</label>\n        <input type=\"text\" id=\"lastName\" formControlName=\"lastName\">\n      </div>\n      <div class=\"form-text\">\n        <label for=\"firstName\">Prenom</label>\n        <input type=\"text\" id=\"firstName\" formControlName=\"firstName\">\n      </div>\n      <div>\n        <label for=\"dateOfBirth\">Date de naissance</label>\n        <input type=\"date\" id=\"dateOfBirth\" formControlName=\"dateOfBirth\">\n      </div>\n      <!--<div class=\"form-text\"  formGroupName=\"principaleKlass\">\n        <label for=\"principaleKlass\" >Classe principale</label>\n        <select id=\"principaleKlass\" formControlName=\"id\">\n          {{schoolId}}\n          <option class=\"lastName\" *ngFor=\"let k of klasses\" [value]=\"k.id\">{{k.name}}</option>\n        </select>\n      </div>\n      <form [formGroup]=\"myForm2\" (ngSubmit)=\"submitForm()\">\n      <div class=\"form-text\"  >\n        <label for=\"subject1\" >Matière enseignée</label>\n        <select id=\"subject1\" formControlName=\"id\">\n          {{schoolId}}\n          <option class=\"lastName\" *ngFor=\"let s of subjects\" [value]=\"s.id\">{{s.name}}</option>\n        </select>\n      </div>\n      </form>\n      <form [formGroup]=\"myForm3\" (ngSubmit)=\"submitForm()\">\n        <div class=\"form-text\"  >\n          <label for=\"subject2\" >Matière enseignée</label>\n          <select id=\"subject2\" formControlName=\"id\">\n            {{schoolId}}\n            <option class=\"lastName\" *ngFor=\"let s of subjects\" [value]=\"s.id\">{{s.name}}</option>\n          </select>\n        </div>\n      </form>\n      <form [formGroup]=\"myForm4\" (ngSubmit)=\"submitForm()\">\n        <div class=\"form-text\"  >\n          <label for=\"subject3\" >Matière enseignée</label>\n          <select id=\"subject3\" formControlName=\"id\">\n            {{schoolId}}\n            <option class=\"lastName\" *ngFor=\"let s of subjects\" [value]=\"s.id\">{{s.name}}</option>\n          </select>\n        </div>\n      </form>-->\n\n\n    </div>\n      <div class=\"card-footer\">\n        <button class=\"btn btn-outline-info\" type=\"submit\">Ajouter</button>\n        <button type=\"button\" class=\"btn btn-outline-info\" routerLink=\"../\">Retour</button>\n      </div>\n  </form>\n\n  {{myForm.value | json}}\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}