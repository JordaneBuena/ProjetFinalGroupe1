{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../subject.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction SubjectAddComponent_ul_7_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Le nom est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubjectAddComponent_ul_7_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"La couleur est requise\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubjectAddComponent_ul_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, SubjectAddComponent_ul_7_li_1_Template, 2, 0, \"li\", 6);\n    i0.ɵɵtemplate(2, SubjectAddComponent_ul_7_li_2_Template, 2, 0, \"li\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm.controls[\"name\"].errors == null ? null : ctx_r0.myForm.controls[\"name\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.myForm.controls[\"color\"].errors == null ? null : ctx_r0.myForm.controls[\"color\"].errors[\"required\"]);\n  }\n}\nexport class SubjectAddComponent {\n  constructor(fb, sServ, activatedRoute, router) {\n    this.fb = fb;\n    this.sServ = sServ;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.formSubmitted = false;\n  }\n  submitForm() {\n    console.log(this.myForm.value);\n    this.formSubmitted = true;\n    if (this.myForm.valid) {\n      this.sServ.add(this.myForm.value).subscribe(s => this.router.navigateByUrl('/subjects'));\n    }\n  }\n  ngOnInit() {\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    if (this.id != '') {\n      this.sServ.getOne(+this.id).subscribe(v => {\n        this.subject = v;\n        this.myForm.get('name')?.setValue(this.subject.name);\n        this.myForm.get('color')?.setValue(this.subject.color);\n      });\n    }\n    this.myForm = this.fb.group({\n      name: [this.subject?.name || '', Validators.required],\n      color: [this.subject?.color || '', Validators.required],\n      school: {\n        id: this.id\n      }\n    });\n  }\n}\nSubjectAddComponent.ɵfac = function SubjectAddComponent_Factory(t) {\n  return new (t || SubjectAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SubjectService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nSubjectAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubjectAddComponent,\n  selectors: [[\"app-subject-add\"]],\n  decls: 26,\n  vars: 5,\n  consts: [[1, \"container\", \"d-flex\"], [1, \"row\", \"align-self-center\"], [1, \"card-deck\"], [1, \"card\"], [1, \"card-header\"], [1, \"text-danger\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\"], [1, \"form-text\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"color\"], [\"type\", \"text\", \"id\", \"color\", \"formControlName\", \"color\"], [1, \"card-footer\"], [\"type\", \"submit\", \"type\", \"button\", \"routerLink\", \"../\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"button\", \"routerLink\", \"../\", 1, \"btn\", \"btn-outline-primary\"]],\n  template: function SubjectAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n      i0.ɵɵtext(5, \"Ajouter une mati\\u00E8re\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtemplate(7, SubjectAddComponent_ul_7_Template, 3, 2, \"ul\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function SubjectAddComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Nom de la mati\\u00E8re\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Couleur\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 14)(20, \"button\", 15);\n      i0.ɵɵtext(21, \"Ajouter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 16);\n      i0.ɵɵtext(23, \"Annuler\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵtext(24);\n      i0.ɵɵpipe(25, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.formSubmitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 3, ctx.myForm.value), \"\\n\");\n    }\n  },\n  dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.JsonPipe],\n  styles: [\"label[_ngcontent-%COMP%]{\\n  display: block;\\n  width: 130px;\\n  float: left;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3ViamVjdC1hZGQvc3ViamVjdC1hZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxZQUFZO0VBQ1osV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWx7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTMwcHg7XG4gIGZsb2F0OiBsZWZ0O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","SubjectAddComponent","constructor","fb","sServ","activatedRoute","router","submitForm","console","log","myForm","value","formSubmitted","valid","add","subscribe","s","navigateByUrl","ngOnInit","id","snapshot","paramMap","get","getOne","v","subject","setValue","name","color","group","required","school","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/subject-add/subject-add.component.ts","/Users/jord/Desktop/ProjetFinal/ProjetFinalGroupe1/schoolFront/src/app/subject-add/subject-add.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject} from \"../../model/subject.model\";\nimport {SubjectService} from \"../subject.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SchoolModel} from \"../../model/school.model\";\nimport {SchoolService} from \"../school.service\";\n\n@Component({\n  selector: 'app-subject-add',\n  templateUrl: './subject-add.component.html',\n  styleUrls: ['./subject-add.component.css']\n})\nexport class SubjectAddComponent implements OnInit{\n  myForm!: FormGroup;\n  subject: Subject | undefined\n  formSubmitted: boolean = false\n\n  id: string | undefined\n\n  constructor(private fb: FormBuilder,\n              private sServ: SubjectService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router){};\n\n  submitForm() {\n    console.log(this.myForm.value);\n    this.formSubmitted = true\n    if (this.myForm.valid) {\n      this.sServ.add(this.myForm.value)\n        .subscribe(s =>\n          this.router.navigateByUrl('/subjects'))\n    }\n  };\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.paramMap.get(\"sId\") || \"\";\n    if (this.id != '') {\n      this.sServ.getOne(+this.id).subscribe(v => {\n        this.subject = v\n      this.myForm.get('name')?.setValue(this.subject.name)\n      this.myForm.get('color')?.setValue(this.subject.color)\n    })\n  }\n\n    this.myForm = this.fb.group({\n      name: [this.subject?.name || '', Validators.required],\n      color: [this.subject?.color || '', Validators.required],\n      school: {id:this.id}\n    })\n  }\n\n}\n","\n<div class=\"container d-flex\">\n  <div class=\"row align-self-center\">\n    <div class=\"card-deck\">\n      <div class=\"card\">\n        <h1 class=\"card-header\">Ajouter une matière</h1>\n        <div class=\"text-danger\">\n          <ul *ngIf=\"formSubmitted\">\n            <li *ngIf=\"myForm.controls['name'].errors?.['required']\">Le nom est requis</li>\n            <li *ngIf=\"myForm.controls['color'].errors?.['required']\">La couleur est requise</li>\n\n          </ul>\n        </div>\n        <form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\">\n          <div class=\"card-body\">\n            <div class=\"card-body\">\n              <div class=\"form-text\">\n                <label for=\"name\">Nom de la matière</label>\n                <input type=\"text\" id=\"name\" formControlName=\"name\">\n              </div>\n              <div class=\"form-text\">\n                <label for=\"color\">Couleur</label>\n                <input type=\"text\" id=\"color\" formControlName=\"color\">\n              </div>\n            </div>\n\n          </div>\n          <div class=\"card-footer\">\n\n            <button class=\"btn btn-outline-primary\" type=\"submit\" type=\"button\" routerLink=\"../\">Ajouter</button>\n            <button class=\"btn btn-outline-primary\" type=\"button\" routerLink=\"../\">Annuler</button>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n  {{myForm.value | json}}\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}